name: MCP Tests
on:
  push:
  pull_request_target:
    types: [labeled, synchronize, opened]
    paths:
      - 'src/autogluon/mcp/**'
      - 'tests/unittests/mcp/**'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  permission_check:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Actor Permission
        id: check
        continue-on-error: true
        uses: prince-chrismc/check-actor-permissions-action@v3
        with:
          github_token: ${{ github.token }}
          permission: write
      - name: Check PR Safe to Run
        if: ${{ github.event_name == 'pull_request_target' && !contains(github.event.pull_request.labels.*.name, 'safe to test') && steps.check.outputs.permitted == 'false' }}
        run: exit 1
      - name: Remove Safe to Test Label
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: 'safe to test'

  mcp_test:
    needs: permission_check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v4

      - name: Checkout repository(Pull Request Target)
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: assistant_py3
          environment-file: .github/workflows_env/unittest_env.yml
          auto-update-conda: true
          python-version: "3.10"
          miniconda-version: "latest"
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
          aws-region: us-west-2
          role-duration-seconds: 1800
      
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          source .github/workflow_scripts/env_setup.sh
          install_all
          setup_test_env
          python -m pip install fastmcp aiohttp
          python -m pip install -e .
      
      - name: Stop existing services
        shell: bash -l {0}
        run: |
          sudo lsof -ti:5000 | xargs -r sudo kill -9 || true
          pkill -f "mlzero-" || true
          pkill -f "autogluon.assistant.webui.backend" || true
      
      - name: Run MCP Test
        shell: bash -l {0}
        env:
          PYTHONUNBUFFERED: "1"
          FORCE_COLOR: "1"
        run: |
          python -m pytest -n 1 -v --capture=tee-sys --log-cli-level=INFO tests/unittests/mcp/test_mcp_integration.py
